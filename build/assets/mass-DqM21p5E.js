const r=function(t,i){this.definitions=i,this.val=t};r.prototype.from=function(t){if(this.destination)throw new Error(".from must be called before .to");return this.origin=this.getUnit(t),this.origin||this.throwUnsupportedUnitError(t),this};r.prototype.to=function(t){if(!this.origin)throw new Error(".to must be called after .from");this.destination=this.getUnit(t);let i;return this.destination||this.throwUnsupportedUnitError(t),this.origin.abbr===this.destination.abbr?Object.assign({value:this.val},this.describe(this.destination.abbr)):(i=this.val*this.origin.unit.to_anchor,this.origin.unit.anchor_shift&&(i-=this.origin.unit.anchor_shift),this.origin.system!==this.destination.system&&(i=this.definitions[this.origin.system].transform(i)),this.destination.unit.anchor_shift!==void 0&&(i+=this.destination.unit.anchor_shift),Object.assign({value:i/this.destination.unit.to_anchor},this.describe(this.destination.abbr)))};r.prototype.toBest=function(t){if(!this.origin)throw new Error(".toBest must be called after .from");return t=Object.assign({exclude:[],cutOffNumber:1},t),this.list().filter(i=>!t.exclude.includes(i.unit)&&this.describe(i.unit).system===this.origin.system).reduce((i,e)=>{const n=this.to(e.unit);return!i||n.value>=t.cutOffNumber&&n.value<i.value?n:i},void 0)};r.prototype.getUnit=function(t){const e=Object.keys(this.definitions).map(n=>{if(this.definitions[n][t])return{abbr:t,system:n,unit:this.definitions[n][t]}}).filter(n=>n!==void 0);return Array.isArray(e)?e[0]:void 0};r.prototype.list=function(){return this.possibilities().map(t=>this.describe(t))};r.prototype.throwUnsupportedUnitError=function(t){throw new Error("Unsupported unit "+t)};r.prototype.describe=function(t){if(!t)throw new Error("You must select a unit");const i=this.getUnit(t);return{unit:i.abbr,system:i.system,singular:i.unit.name.singular,plural:i.unit.name.plural}};r.prototype.possibilities=function(){return Array.prototype.concat(...Object.keys(this.definitions).map(t=>Object.keys(this.definitions[t]).splice(2)))};function a(t){return i=>new r(i,t)}const s=3.28084,u={metric:{baseUnit:"m",transform:t=>t*s,mm:{name:{singular:"Millimeter",plural:"Millimeters"},to_anchor:1/1e3},cm:{name:{singular:"Centimeter",plural:"Centimeters"},to_anchor:1/100},m:{name:{singular:"Meter",plural:"Meters"},to_anchor:1},km:{name:{singular:"Kilometer",plural:"Kilometers"},to_anchor:1e3}},imperial:{baseUnit:"ft",transform:t=>t*1/s,in:{name:{singular:"Inch",plural:"Inches"},to_anchor:1/12},yd:{name:{singular:"Yard",plural:"Yards"},to_anchor:3},"ft-us":{name:{singular:"US Survey Foot",plural:"US Survey Feet"},to_anchor:1.000002},ft:{name:{singular:"Foot",plural:"Feet"},to_anchor:1},fathom:{name:{singular:"Fathom",plural:"Fathoms"},to_anchor:6},mi:{name:{singular:"Mile",plural:"Miles"},to_anchor:5280},nMi:{name:{singular:"Nautical Mile",plural:"Nautical Miles"},to_anchor:6076.12}}};var h=a(u);const o=453.592,l={metric:{baseUnit:"g",transform:t=>t*1/o,mcg:{name:{singular:"Microgram",plural:"Micrograms"},to_anchor:1/1e6},mg:{name:{singular:"Milligram",plural:"Milligrams"},to_anchor:1/1e3},g:{name:{singular:"Gram",plural:"Grams"},to_anchor:1},kg:{name:{singular:"Kilogram",plural:"Kilograms"},to_anchor:1e3},mt:{name:{singular:"Metric Tonne",plural:"Metric Tonnes"},to_anchor:1e6}},imperial:{baseUnit:"lb",transform:t=>t*o,oz:{name:{singular:"Ounce",plural:"Ounces"},to_anchor:1/16},lb:{name:{singular:"Pound",plural:"Pounds"},to_anchor:1},t:{name:{singular:"Ton",plural:"Tons"},to_anchor:2e3}}};var c=a(l);export{h as l,c as m};
