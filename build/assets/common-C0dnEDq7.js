import{n as p,o as t,aF as e}from"./index-tWVfh1a_.js";const d=()=>{localStorage.removeItem("token"),localStorage.removeItem("redux-root"),e.dispatch({type:"INIT_NEW_PROGRAM"}),e.dispatch({type:"InitAP"}),e.dispatch({type:"INIT_PROFILE"}),e.dispatch({type:"INIT_NEW_PROGRAM"}),e.dispatch({type:"RESET_NOTIFICATIONS"}),e.dispatch({type:"INIT_PL"}),e.dispatch({type:"INIT_CLIENT_EXERCISE"}),e.dispatch({type:"INITIALIZE_CHAT"}),localStorage.clear(),e.dispatch({type:"LOG_OUT"}),setTimeout(()=>window.location.reload(),1e3)},c=r=>new Promise((s,o)=>{p.post(`${t.protocol}${t.baseUrl}${t.checkExist}`,r).then(a=>s(a.data)).catch(a=>o("error"))}),l=r=>new Promise((s,o)=>{e.dispatch({type:"UPDATE_FEED",payload:{loading:!0}}),p.get(`${t.protocol}${t.baseUrl}${t.fetchUsers}_id=${r}`).then(a=>(e.dispatch({type:"UPDATE_FEED",payload:{loading:!1}}),s(a.data.ServerResponse[0]))).catch(a=>(e.dispatch({type:"UPDATE_FEED",payload:{loading:!1}}),o("error")))}),i=r=>new Promise((s,o)=>{p.get(`${t.protocol}${t.baseUrl}${t.allPrograms}createdBy=${r}&ProgramType=Public&sort=-createdAt`).then(a=>s(a.data.ServerResponse)).catch(a=>o("error"))}),E=r=>new Promise((s,o)=>{e.dispatch({type:"UPDATE_FEED",payload:{loading:!0}}),p.get(`${t.protocol}${t.baseUrl}${t.getSentPrograms}${r}`).then(a=>(e.dispatch({type:"UPDATE_FEED",payload:{loading:!1}}),s(a.data))).catch(a=>(e.dispatch({type:"UPDATE_FEED",payload:{loading:!1}}),a.response&&a.response.status==404&&e.dispatch({type:"UPDATE_FEED",payload:{loading:!1,snackbar:!0,message:"Upable to find requested resource",severity:"error"}}),o(a)))}),g=r=>new Promise((s,o)=>{e.dispatch({type:"UPDATE_FEED",payload:{loading:!0}}),p.delete(`${t.protocol}${t.baseUrl}${t.deleteSendProgram}${r}`).then(a=>(e.dispatch({type:"UPDATE_FEED",payload:{loading:!1,snackbar:!0,message:"Program deleted"}}),e.dispatch({type:"DELETE_SENT_PROGRAM",payload:{}}),s(a.data))).catch(a=>(e.dispatch({type:"UPDATE_FEED",payload:{loading:!1}}),a.response&&a.response.status==404&&e.dispatch({type:"UPDATE_FEED",payload:{loading:!1,snackbar:!0,message:"Upable to find requested resource",severity:"error"}}),o(a)))}),y=r=>{p.put(`${t.protocol}${t.baseUrl}${t.markLogAsRead}`,{_id:r})},h=r=>p.get(`${t.protocol}${t.baseUrl}${t.getUnreadLogCount}${r}`);export{E as a,l as b,c,g as d,i as f,h as g,y as m,d as s};
